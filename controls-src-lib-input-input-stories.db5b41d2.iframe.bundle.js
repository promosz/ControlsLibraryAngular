(self.webpackChunkcontrols_library_angular=self.webpackChunkcontrols_library_angular||[]).push([[106],{"./projects/controls/src/lib/input/input.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".ctrl-form-field {\n  width: 100%;\n}\n.ctrl-form-field .mat-mdc-form-field {\n  width: 100%;\n}\n.ctrl-form-field--sm .mat-mdc-form-field-infix {\n  padding: 4px 0;\n  font-size: 12px;\n}\n.ctrl-form-field--md .mat-mdc-form-field-infix {\n  padding: 8px 0;\n  font-size: 14px;\n}\n.ctrl-form-field--lg .mat-mdc-form-field-infix {\n  padding: 12px 0;\n  font-size: 16px;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/controls/src/lib/input/input.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FormExample:()=>FormExample,Playground:()=>Playground,Sizes:()=>Sizes,States:()=>States,Types:()=>Types,__namedExportsOrder:()=>__namedExportsOrder,default:()=>input_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var input_componentngResource=__webpack_require__("./projects/controls/src/lib/input/input.component.scss?ngResource"),input_componentngResource_default=__webpack_require__.n(input_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs");let InputComponent=class InputComponent{label="";placeholder="";hint="";error="";disabled=!1;required=!1;type="text";size="md";value="";valueChange=new core.EventEmitter;focus=new core.EventEmitter;blur=new core.EventEmitter;inputId=`ctrl-input-${Math.random().toString(36).substr(2,9)}`;onChange=value=>{};onTouched=()=>{};onInput(event){const target=event.target;this.value=target.value,this.onChange(this.value),this.valueChange.emit(this.value)}onFocus(event){this.focus.emit(event)}onBlur(event){this.onTouched(),this.blur.emit(event)}writeValue(value){this.value=value||""}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}get inputClasses(){const classes=["ctrl-input",`ctrl-input--${this.size}`];return this.error&&classes.push("ctrl-input--error"),this.disabled&&classes.push("ctrl-input--disabled"),classes.join(" ")}get hasError(){return!!this.error}static propDecorators={label:[{type:core.Input}],placeholder:[{type:core.Input}],hint:[{type:core.Input}],error:[{type:core.Input}],disabled:[{type:core.Input}],required:[{type:core.Input}],type:[{type:core.Input}],size:[{type:core.Input}],value:[{type:core.Input}],valueChange:[{type:core.Output}],focus:[{type:core.Output}],blur:[{type:core.Output}]}};InputComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ctrl-input",template:'<div class="ctrl-form-field">\n  <label *ngIf="label" class="ctrl-label" [for]="inputId">\n    {{ label }}\n    <span *ngIf="required" class="ctrl-required">*</span>\n  </label>\n  \n  <input\n    [id]="inputId"\n    [type]="type"\n    [placeholder]="placeholder"\n    [disabled]="disabled"\n    [required]="required"\n    [value]="value"\n    [class]="inputClasses"\n    (input)="onInput($event)"\n    (focus)="onFocus($event)"\n    (blur)="onBlur($event)"\n  />\n  \n  <div *ngIf="hint && !hasError" class="ctrl-hint">\n    {{ hint }}\n  </div>\n  \n  <div *ngIf="hasError" class="ctrl-error">\n    {{ error }}\n  </div>\n</div>\n',providers:[{provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)((()=>InputComponent)),multi:!0}],styles:[input_componentngResource_default()]})],InputComponent);var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs");const input_stories={title:"Components/Input",component:InputComponent,parameters:{docs:{description:{component:"Input fields allow users to enter text, numbers, and other data. They provide a way to collect information from users in forms."}}},argTypes:{label:{control:{type:"text"},description:"Label text for the input field"},placeholder:{control:{type:"text"},description:"Placeholder text shown when input is empty"},hint:{control:{type:"text"},description:"Helper text shown below the input"},error:{control:{type:"text"},description:"Error message to display"},disabled:{control:{type:"boolean"},description:"Whether the input is disabled"},required:{control:{type:"boolean"},description:"Whether the input is required"},type:{control:{type:"select"},options:["text","email","password","number","tel","url"],description:"Input type"},size:{control:{type:"select"},options:["sm","md","lg"],description:"Size of the input field"}},decorators:[(0,dist.moduleMetadata)({imports:[fesm2022_forms.YN]})],tags:["autodocs"]},Default={args:{label:"Email",placeholder:"Enter your email",hint:"We'll never share your email",type:"email",size:"md",disabled:!1,required:!1}},Sizes={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input label="Small Input" size="sm" placeholder="Small size"></ctrl-input>\n        <ctrl-input label="Medium Input" size="md" placeholder="Medium size"></ctrl-input>\n        <ctrl-input label="Large Input" size="lg" placeholder="Large size"></ctrl-input>\n      </div>\n    '})},Types={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input label="Text" type="text" placeholder="Enter text"></ctrl-input>\n        <ctrl-input label="Email" type="email" placeholder="Enter email"></ctrl-input>\n        <ctrl-input label="Password" type="password" placeholder="Enter password"></ctrl-input>\n        <ctrl-input label="Number" type="number" placeholder="Enter number"></ctrl-input>\n        <ctrl-input label="Phone" type="tel" placeholder="Enter phone number"></ctrl-input>\n        <ctrl-input label="URL" type="url" placeholder="Enter URL"></ctrl-input>\n      </div>\n    '})},States={render:()=>({template:'\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input label="Default" placeholder="Normal state"></ctrl-input>\n        <ctrl-input label="With Hint" placeholder="With helper text" hint="This is helpful information"></ctrl-input>\n        <ctrl-input label="With Error" placeholder="Error state" error="This field is required"></ctrl-input>\n        <ctrl-input label="Disabled" placeholder="Disabled state" [disabled]="true"></ctrl-input>\n        <ctrl-input label="Required" placeholder="Required field" [required]="true"></ctrl-input>\n      </div>\n    '})},FormExample={render:()=>({template:'\n      <form style="max-width: 400px; display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input \n          label="Full Name" \n          placeholder="Enter your full name" \n          [required]="true">\n        </ctrl-input>\n        \n        <ctrl-input \n          label="Email Address" \n          type="email" \n          placeholder="Enter your email" \n          hint="We\'ll use this to contact you"\n          [required]="true">\n        </ctrl-input>\n        \n        <ctrl-input \n          label="Password" \n          type="password" \n          placeholder="Create a password"\n          hint="Must be at least 8 characters"\n          [required]="true">\n        </ctrl-input>\n        \n        <ctrl-button type="submit" variant="primary" [fullWidth]="true">\n          Create Account\n        </ctrl-button>\n      </form>\n    '})},Playground={args:{label:"Input Label",placeholder:"Enter text here",hint:"",error:"",disabled:!1,required:!1,type:"text",size:"md"},render:args=>({props:{...args,onValueChange:value=>{console.log("Value changed:",value)},onFocus:event=>{console.log("Input focused:",event)},onBlur:event=>{console.log("Input blurred:",event)}},template:'\n      <div style="max-width: 400px;">\n        <ctrl-input \n          [label]="label"\n          [placeholder]="placeholder"\n          [hint]="hint"\n          [error]="error"\n          [disabled]="disabled"\n          [required]="required"\n          [type]="type"\n          [size]="size"\n          (valueChange)="onValueChange($event)"\n          (focus)="onFocus($event)"\n          (blur)="onBlur($event)">\n        </ctrl-input>\n      </div>\n    '})},__namedExportsOrder=["Default","Sizes","Types","States","FormExample","Playground"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Email',\n    placeholder: 'Enter your email',\n    hint: 'We\\'ll never share your email',\n    type: 'email',\n    size: 'md',\n    disabled: false,\n    required: false\n  }\n}",...Default.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input label="Small Input" size="sm" placeholder="Small size"></ctrl-input>\n        <ctrl-input label="Medium Input" size="md" placeholder="Medium size"></ctrl-input>\n        <ctrl-input label="Large Input" size="lg" placeholder="Large size"></ctrl-input>\n      </div>\n    `\n  })\n}',...Sizes.parameters?.docs?.source}}},Types.parameters={...Types.parameters,docs:{...Types.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input label="Text" type="text" placeholder="Enter text"></ctrl-input>\n        <ctrl-input label="Email" type="email" placeholder="Enter email"></ctrl-input>\n        <ctrl-input label="Password" type="password" placeholder="Enter password"></ctrl-input>\n        <ctrl-input label="Number" type="number" placeholder="Enter number"></ctrl-input>\n        <ctrl-input label="Phone" type="tel" placeholder="Enter phone number"></ctrl-input>\n        <ctrl-input label="URL" type="url" placeholder="Enter URL"></ctrl-input>\n      </div>\n    `\n  })\n}',...Types.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input label="Default" placeholder="Normal state"></ctrl-input>\n        <ctrl-input label="With Hint" placeholder="With helper text" hint="This is helpful information"></ctrl-input>\n        <ctrl-input label="With Error" placeholder="Error state" error="This field is required"></ctrl-input>\n        <ctrl-input label="Disabled" placeholder="Disabled state" [disabled]="true"></ctrl-input>\n        <ctrl-input label="Required" placeholder="Required field" [required]="true"></ctrl-input>\n      </div>\n    `\n  })\n}',...States.parameters?.docs?.source}}},FormExample.parameters={...FormExample.parameters,docs:{...FormExample.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <form style="max-width: 400px; display: flex; flex-direction: column; gap: 16px;">\n        <ctrl-input \n          label="Full Name" \n          placeholder="Enter your full name" \n          [required]="true">\n        </ctrl-input>\n        \n        <ctrl-input \n          label="Email Address" \n          type="email" \n          placeholder="Enter your email" \n          hint="We\'ll use this to contact you"\n          [required]="true">\n        </ctrl-input>\n        \n        <ctrl-input \n          label="Password" \n          type="password" \n          placeholder="Create a password"\n          hint="Must be at least 8 characters"\n          [required]="true">\n        </ctrl-input>\n        \n        <ctrl-button type="submit" variant="primary" [fullWidth]="true">\n          Create Account\n        </ctrl-button>\n      </form>\n    `\n  })\n}',...FormExample.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: \'Input Label\',\n    placeholder: \'Enter text here\',\n    hint: \'\',\n    error: \'\',\n    disabled: false,\n    required: false,\n    type: \'text\',\n    size: \'md\'\n  },\n  render: args => ({\n    props: {\n      ...args,\n      onValueChange: (value: string) => {\n        console.log(\'Value changed:\', value);\n      },\n      onFocus: (event: FocusEvent) => {\n        console.log(\'Input focused:\', event);\n      },\n      onBlur: (event: FocusEvent) => {\n        console.log(\'Input blurred:\', event);\n      }\n    },\n    template: `\n      <div style="max-width: 400px;">\n        <ctrl-input \n          [label]="label"\n          [placeholder]="placeholder"\n          [hint]="hint"\n          [error]="error"\n          [disabled]="disabled"\n          [required]="required"\n          [type]="type"\n          [size]="size"\n          (valueChange)="onValueChange($event)"\n          (focus)="onFocus($event)"\n          (blur)="onBlur($event)">\n        </ctrl-input>\n      </div>\n    `\n  })\n}',...Playground.parameters?.docs?.source}}}}}]);