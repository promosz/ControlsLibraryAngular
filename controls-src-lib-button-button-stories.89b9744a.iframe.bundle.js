(self.webpackChunkcontrols_library_angular=self.webpackChunkcontrols_library_angular||[]).push([[248],{"./projects/controls/src/lib/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".ctrl-button {\n  font-family: var(--font-family-primary);\n  text-transform: uppercase;\n  letter-spacing: 0.0892857143em;\n  font-weight: var(--font-weight-medium);\n}\n.ctrl-button--sm {\n  min-width: 64px;\n  height: 32px;\n  padding: 0 12px;\n  font-size: 13px;\n}\n.ctrl-button--md {\n  min-width: 64px;\n  height: 36px;\n  padding: 0 16px;\n  font-size: 14px;\n}\n.ctrl-button--lg {\n  min-width: 88px;\n  height: 48px;\n  padding: 0 24px;\n  font-size: 15px;\n}\n.ctrl-button--full-width {\n  width: 100%;\n}\n.ctrl-button--disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n.ctrl-button--loading .ctrl-button__loading {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n.ctrl-button--loading .ctrl-button__loading-text {\n  font-size: inherit;\n}\n\n.mat-mdc-raised-button {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-mdc-button.mat-primary {\n  --mdc-text-button-label-text-color: var(--color-primary-500);\n}\n\n.mat-mdc-raised-button.mat-primary {\n  --mdc-filled-button-container-color: var(--color-primary-500);\n  --mdc-filled-button-label-text-color: var(--color-primary-50);\n}\n\n.mat-mdc-stroked-button.mat-primary {\n  --mdc-outlined-button-outline-color: var(--color-primary-500);\n  --mdc-outlined-button-label-text-color: var(--color-primary-500);\n}\n\n.mat-mdc-flat-button.mat-primary {\n  --mdc-text-button-label-text-color: var(--color-primary-500);\n}\n\n.mat-mdc-button.mat-accent {\n  --mdc-text-button-label-text-color: var(--color-secondary-500);\n}\n\n.mat-mdc-raised-button.mat-accent {\n  --mdc-filled-button-container-color: var(--color-secondary-500);\n  --mdc-filled-button-label-text-color: var(--color-secondary-50);\n}\n\n.mat-mdc-stroked-button.mat-accent {\n  --mdc-outlined-button-outline-color: var(--color-secondary-500);\n  --mdc-outlined-button-label-text-color: var(--color-secondary-500);\n}\n\n.mat-mdc-flat-button.mat-accent {\n  --mdc-text-button-label-text-color: var(--color-secondary-500);\n}\n\n.mat-mdc-button.mat-warn {\n  --mdc-text-button-label-text-color: var(--color-error-500);\n}\n\n.mat-mdc-raised-button.mat-warn {\n  --mdc-filled-button-container-color: var(--color-error-500);\n  --mdc-filled-button-label-text-color: var(--color-error-50);\n}\n\n.mat-mdc-stroked-button.mat-warn {\n  --mdc-outlined-button-outline-color: var(--color-error-500);\n  --mdc-outlined-button-label-text-color: var(--color-error-500);\n}\n\n.mat-mdc-flat-button.mat-warn {\n  --mdc-text-button-label-text-color: var(--color-error-500);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/controls/src/lib/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllCombinations:()=>AllCombinations,Default:()=>Default,MaterialColors:()=>MaterialColors,MaterialVariants:()=>MaterialVariants,Playground:()=>Playground,Sizes:()=>Sizes,States:()=>States,__namedExportsOrder:()=>__namedExportsOrder,default:()=>button_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var button_componentngResource=__webpack_require__("./projects/controls/src/lib/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common_module_Dx7dWex5=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-Dx7dWex5.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),progress_spinner=__webpack_require__("./node_modules/@angular/material/fesm2022/progress-spinner.mjs");let ButtonComponent=class ButtonComponent{variant="basic";color="primary";size="md";disabled=!1;loading=!1;type="button";fullWidth=!1;clicked=new core.EventEmitter;onClick(event){this.disabled||this.loading||this.clicked.emit(event)}get buttonClasses(){const classes=["ctrl-button",`ctrl-button--${this.size}`];return this.disabled&&classes.push("ctrl-button--disabled"),this.loading&&classes.push("ctrl-button--loading"),this.fullWidth&&classes.push("ctrl-button--full-width"),classes.join(" ")}get materialDirective(){switch(this.variant){case"basic":default:return"mat-button";case"raised":return"mat-raised-button";case"stroked":return"mat-stroked-button";case"flat":return"mat-flat-button"}}static propDecorators={variant:[{type:core.Input}],color:[{type:core.Input}],size:[{type:core.Input}],disabled:[{type:core.Input}],loading:[{type:core.Input}],type:[{type:core.Input}],fullWidth:[{type:core.Input}],clicked:[{type:core.Output}]}};ButtonComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ctrl-button",standalone:!0,imports:[common_module_Dx7dWex5.MD,fesm2022_button.Hl,progress_spinner.D6],template:'<button\n  mat-button\n  [mat-raised-button]="variant === \'raised\'"\n  [mat-stroked-button]="variant === \'stroked\'"\n  [mat-flat-button]="variant === \'flat\'"\n  [color]="color"\n  [disabled]="disabled || loading"\n  [type]="type"\n  [class]="buttonClasses"\n  (click)="onClick($event)">\n  \n  <span class="ctrl-button__content" *ngIf="!loading">\n    <ng-content></ng-content>\n  </span>\n  \n  <span class="ctrl-button__loading" *ngIf="loading">\n    <mat-spinner diameter="20"></mat-spinner>\n    <span class="ctrl-button__loading-text">Loading...</span>\n  </span>\n</button>\n\n',styles:[button_componentngResource_default()]})],ButtonComponent);var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs");const button_stories={title:"Components/Button",component:ButtonComponent,parameters:{docs:{description:{component:"Button component following Angular Material v19 design specification. Supports Basic, Raised, Stroked, and Flat variants with Primary, Accent, and Warn colors."}}},argTypes:{variant:{control:{type:"select"},options:["basic","raised","stroked","flat"],description:"Material Design button variant"},color:{control:{type:"select"},options:["primary","accent","warn"],description:"Material Design color theme"},size:{control:{type:"select"},options:["sm","md","lg"],description:"Button size"},disabled:{control:{type:"boolean"},description:"Whether the button is disabled"},loading:{control:{type:"boolean"},description:"Whether the button is in loading state"},fullWidth:{control:{type:"boolean"},description:"Whether the button should take full width"},type:{control:{type:"select"},options:["button","submit","reset"],description:"HTML button type"}},decorators:[(0,dist.moduleMetadata)({imports:[fesm2022_forms.YN,fesm2022_button.Hl,progress_spinner.D6,animations.NoopAnimationsModule]})],tags:["autodocs"]},Default={args:{variant:"basic",color:"primary",size:"md",disabled:!1,loading:!1,fullWidth:!1},render:args=>({props:args,template:'<ctrl-button [variant]="variant" [color]="color" [size]="size" [disabled]="disabled" [loading]="loading" [fullWidth]="fullWidth" (clicked)="onClick($event)">Click me</ctrl-button>'})},MaterialVariants={render:()=>({template:'\n      <div style="display: flex; gap: 16px; flex-wrap: wrap; align-items: center;">\n        <ctrl-button variant="basic" color="primary">Basic</ctrl-button>\n        <ctrl-button variant="raised" color="primary">Raised</ctrl-button>\n        <ctrl-button variant="stroked" color="primary">Stroked</ctrl-button>\n        <ctrl-button variant="flat" color="primary">Flat</ctrl-button>\n      </div>\n    '})},MaterialColors={render:()=>({template:'\n      <div style="display: flex; gap: 16px; flex-wrap: wrap; align-items: center;">\n        <ctrl-button variant="raised" color="primary">Primary</ctrl-button>\n        <ctrl-button variant="raised" color="accent">Accent</ctrl-button>\n        <ctrl-button variant="raised" color="warn">Warn</ctrl-button>\n      </div>\n    '})},AllCombinations={render:()=>({template:'\n      <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 16px;">\n        <div style="text-align: center;">\n          <h4>Basic</h4>\n          <ctrl-button variant="basic" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="basic" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="basic" color="warn">Warn</ctrl-button>\n        </div>\n        <div style="text-align: center;">\n          <h4>Raised</h4>\n          <ctrl-button variant="raised" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="raised" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="raised" color="warn">Warn</ctrl-button>\n        </div>\n        <div style="text-align: center;">\n          <h4>Stroked</h4>\n          <ctrl-button variant="stroked" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="stroked" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="stroked" color="warn">Warn</ctrl-button>\n        </div>\n        <div style="text-align: center;">\n          <h4>Flat</h4>\n          <ctrl-button variant="flat" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="flat" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="flat" color="warn">Warn</ctrl-button>\n        </div>\n      </div>\n    '})},Sizes={render:()=>({template:'\n      <div style="display: flex; gap: 16px; align-items: center;">\n        <ctrl-button size="sm" variant="raised" color="primary">Small</ctrl-button>\n        <ctrl-button size="md" variant="raised" color="primary">Medium</ctrl-button>\n        <ctrl-button size="lg" variant="raised" color="primary">Large</ctrl-button>\n      </div>\n    '})},States={render:()=>({template:'\n      <div style="display: flex; gap: 16px; flex-wrap: wrap; align-items: center;">\n        <ctrl-button variant="raised" color="primary">Default</ctrl-button>\n        <ctrl-button variant="raised" color="primary" [disabled]="true">Disabled</ctrl-button>\n        <ctrl-button variant="raised" color="primary" [loading]="true">Loading</ctrl-button>\n        <ctrl-button variant="raised" color="primary" [fullWidth]="true">Full Width</ctrl-button>\n      </div>\n    '})},Playground={args:{variant:"basic",color:"primary",size:"md",disabled:!1,loading:!1,fullWidth:!1,type:"button"},render:args=>({props:{...args,onClick:event=>{console.log("Button clicked!",event),alert("Button clicked!")}},template:'\n      <div style="padding: 20px;">\n        <ctrl-button \n          [variant]="variant" \n          [color]="color"\n          [size]="size" \n          [disabled]="disabled" \n          [loading]="loading" \n          [fullWidth]="fullWidth"\n          [type]="type"\n          (clicked)="onClick($event)">\n          {{ loading ? \'Loading...\' : \'Click me\' }}\n        </ctrl-button>\n      </div>\n    '})},__namedExportsOrder=["Default","MaterialVariants","MaterialColors","AllCombinations","Sizes","States","Playground"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'basic\',\n    color: \'primary\',\n    size: \'md\',\n    disabled: false,\n    loading: false,\n    fullWidth: false\n  },\n  render: args => ({\n    props: args,\n    template: \'<ctrl-button [variant]="variant" [color]="color" [size]="size" [disabled]="disabled" [loading]="loading" [fullWidth]="fullWidth" (clicked)="onClick($event)">Click me</ctrl-button>\'\n  })\n}',...Default.parameters?.docs?.source}}},MaterialVariants.parameters={...MaterialVariants.parameters,docs:{...MaterialVariants.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; gap: 16px; flex-wrap: wrap; align-items: center;">\n        <ctrl-button variant="basic" color="primary">Basic</ctrl-button>\n        <ctrl-button variant="raised" color="primary">Raised</ctrl-button>\n        <ctrl-button variant="stroked" color="primary">Stroked</ctrl-button>\n        <ctrl-button variant="flat" color="primary">Flat</ctrl-button>\n      </div>\n    `\n  })\n}',...MaterialVariants.parameters?.docs?.source}}},MaterialColors.parameters={...MaterialColors.parameters,docs:{...MaterialColors.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; gap: 16px; flex-wrap: wrap; align-items: center;">\n        <ctrl-button variant="raised" color="primary">Primary</ctrl-button>\n        <ctrl-button variant="raised" color="accent">Accent</ctrl-button>\n        <ctrl-button variant="raised" color="warn">Warn</ctrl-button>\n      </div>\n    `\n  })\n}',...MaterialColors.parameters?.docs?.source}}},AllCombinations.parameters={...AllCombinations.parameters,docs:{...AllCombinations.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 16px;">\n        <div style="text-align: center;">\n          <h4>Basic</h4>\n          <ctrl-button variant="basic" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="basic" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="basic" color="warn">Warn</ctrl-button>\n        </div>\n        <div style="text-align: center;">\n          <h4>Raised</h4>\n          <ctrl-button variant="raised" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="raised" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="raised" color="warn">Warn</ctrl-button>\n        </div>\n        <div style="text-align: center;">\n          <h4>Stroked</h4>\n          <ctrl-button variant="stroked" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="stroked" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="stroked" color="warn">Warn</ctrl-button>\n        </div>\n        <div style="text-align: center;">\n          <h4>Flat</h4>\n          <ctrl-button variant="flat" color="primary">Primary</ctrl-button>\n          <ctrl-button variant="flat" color="accent">Accent</ctrl-button>\n          <ctrl-button variant="flat" color="warn">Warn</ctrl-button>\n        </div>\n      </div>\n    `\n  })\n}',...AllCombinations.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; gap: 16px; align-items: center;">\n        <ctrl-button size="sm" variant="raised" color="primary">Small</ctrl-button>\n        <ctrl-button size="md" variant="raised" color="primary">Medium</ctrl-button>\n        <ctrl-button size="lg" variant="raised" color="primary">Large</ctrl-button>\n      </div>\n    `\n  })\n}',...Sizes.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; gap: 16px; flex-wrap: wrap; align-items: center;">\n        <ctrl-button variant="raised" color="primary">Default</ctrl-button>\n        <ctrl-button variant="raised" color="primary" [disabled]="true">Disabled</ctrl-button>\n        <ctrl-button variant="raised" color="primary" [loading]="true">Loading</ctrl-button>\n        <ctrl-button variant="raised" color="primary" [fullWidth]="true">Full Width</ctrl-button>\n      </div>\n    `\n  })\n}',...States.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'basic\',\n    color: \'primary\',\n    size: \'md\',\n    disabled: false,\n    loading: false,\n    fullWidth: false,\n    type: \'button\'\n  },\n  render: args => ({\n    props: {\n      ...args,\n      onClick: (event: Event) => {\n        console.log(\'Button clicked!\', event);\n        alert(\'Button clicked!\');\n      }\n    },\n    template: `\n      <div style="padding: 20px;">\n        <ctrl-button \n          [variant]="variant" \n          [color]="color"\n          [size]="size" \n          [disabled]="disabled" \n          [loading]="loading" \n          [fullWidth]="fullWidth"\n          [type]="type"\n          (clicked)="onClick($event)">\n          {{ loading ? \'Loading...\' : \'Click me\' }}\n        </ctrl-button>\n      </div>\n    `\n  })\n}',...Playground.parameters?.docs?.source}}}}}]);